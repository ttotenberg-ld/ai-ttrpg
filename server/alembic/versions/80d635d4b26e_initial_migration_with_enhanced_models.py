"""Initial migration with enhanced models

Revision ID: 80d635d4b26e
Revises: 
Create Date: 2025-06-04 13:34:44.350033

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '80d635d4b26e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category', sa.Enum('COMBAT', 'SOCIAL', 'EXPLORATION', 'CRAFTING', 'MAGIC', 'KNOWLEDGE', 'SURVIVAL', name='skillcategory'), nullable=False),
    sa.Column('prerequisite_skills', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('minimum_level', sa.Integer(), nullable=False),
    sa.Column('stat_requirements', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skill_name'), 'skill', ['name'], unique=True)
    op.create_table('passwordresettoken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_passwordresettoken_token'), 'passwordresettoken', ['token'], unique=True)
    op.create_table('characterskill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('proficiency_level', sa.Integer(), nullable=False),
    sa.Column('experience_points', sa.Integer(), nullable=False),
    sa.Column('acquired_at', sa.DateTime(), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['playercharacter.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('characterversion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('character_data', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('change_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['playercharacter.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('item_type', sa.Enum('WEAPON', 'ARMOR', 'ACCESSORY', 'CONSUMABLE', 'TOOL', 'MISC', name='equipmenttype'), nullable=False),
    sa.Column('stat_modifiers', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_equipped', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['playercharacter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('playercharacter', sa.Column('version', sa.Integer(), nullable=False))
    op.add_column('playercharacter', sa.Column('is_template', sa.Boolean(), nullable=False))
    op.add_column('playercharacter', sa.Column('is_public', sa.Boolean(), nullable=False))
    op.add_column('playercharacter', sa.Column('experience_points', sa.Integer(), nullable=False))
    op.add_column('playercharacter', sa.Column('character_level', sa.Integer(), nullable=False))
    op.add_column('playercharacter', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('playercharacter', sa.Column('updated_at', sa.DateTime(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('playercharacter', 'updated_at')
    op.drop_column('playercharacter', 'created_at')
    op.drop_column('playercharacter', 'character_level')
    op.drop_column('playercharacter', 'experience_points')
    op.drop_column('playercharacter', 'is_public')
    op.drop_column('playercharacter', 'is_template')
    op.drop_column('playercharacter', 'version')
    op.drop_table('equipment')
    op.drop_table('characterversion')
    op.drop_table('characterskill')
    op.drop_index(op.f('ix_passwordresettoken_token'), table_name='passwordresettoken')
    op.drop_table('passwordresettoken')
    op.drop_index(op.f('ix_skill_name'), table_name='skill')
    op.drop_table('skill')
    # ### end Alembic commands ###
